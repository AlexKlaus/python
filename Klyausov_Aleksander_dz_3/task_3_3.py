# Написать функцию thesaurus(), принимающую в качестве аргументов имена сотрудников
# и возвращающую словарь, в котором ключи — первые буквы имён, а значения — списки,
# содержащие имена, начинающиеся с соответствующей буквы. Например:
# >>> thesaurus("Иван", "Мария", "Петр", "Илья")
# {
#     "И": ["Иван", "Илья"],
#     "М": ["Мария"], "П": ["Петр"]
# }
# Подумайте: полезен ли будет вам оператор распаковки? Как поступить, если потребуется
# сортировка по ключам? Можно ли использовать словарь в этом случае?
def thesaurus(*args):
    """
    Функция принимает в качестве аргументов имена сотрудников
    и возвращающает словарь, в котором ключи — первые буквы имён, а значения — списки,
    содержащие имена, начинающиеся с соответствующей буквы.
    :param args: "Иван", "Мария", "Петр", "Илья"
    :return: {"И": ["Иван", "Илья"],"М": ["Мария"], "П": ["Петр"]}
    """
    thesaurus_dict = {}
    # Получаем первые буквы имен, отсортированые по возрастанию
    first_letters = sorted(set(map(lambda x: x[0], args)))

    for letter in first_letters:
        thesaurus_dict[letter] = sorted(filter(lambda x: x[0] == letter, args))
    print(thesaurus_dict)


thesaurus('Xena', 'John', 'Chan', 'Chan', 'Chester', 'Lana', 'Alex', 'Lesly', 'Tom', 'Ваня', 'Петя', 'Вика')
